{"version":3,"file":"./blocks/legacy-navigation-block.min.js","mappings":"wVAQA,SAAWA,GAEP,MAAM,GAAEC,GAAuCD,EAAGE,MAC5C,kBAAEC,GAAuCH,EAAGI,QAC1CC,iBAAkBC,GAAqBN,GACzC,SAAEO,GAAuCP,EAAGQ,SAE5C,YAAEC,EAAF,cAAeC,EAAf,sBAA8BC,GAA0BX,EAAGY,aAC3D,aAAEC,EAAF,YAAgBC,EAAhB,OAA6BC,EAA7B,YAAqCC,EAArC,gBAAkDC,EAAlD,cAAmEC,EAAnE,gBAAkFC,GAAoBnB,EAAGoB,WAG/GjB,EAAkB,qCAAsC,CAEpDkB,MAAO,0BAEPC,KAAM,CAAEC,WAAY,UAAWC,IAAK,mBACpCC,SAAU,aAEVC,WAAYC,EAEZC,KAAK,GAAuD,IAAtD,WAAEF,EAAF,UAAcG,EAAd,cAAyBC,EAAzB,WAAwCC,GAAc,EAGxD,MAAM,iBAAEC,EAAF,MAAoBX,EAApB,KAA2BY,EAA3B,UAAiCC,EAAjC,SAA4CC,EAA5C,WAAsDC,GAAeV,EAE3E,OACI,oBAACnB,EAAD,KAEI,oBAACG,EAAD,KAEI,oBAACC,EAAD,CACI0B,MAAQX,EAAWY,UACnBC,SAAaC,IAAiBV,EAAe,CAAEQ,UAAWE,OAG9D,oBAAC3B,EAAD,KACI,oBAACC,EAAD,CAAa2B,GAAK1B,EAAS2B,QAAU,IAAMZ,EAAe,CAAGE,kBAAoBA,KAAjF,gBAKNA,GAAoB,oBAAC1B,EAAD,CAAkBqC,MAAM,qCAAqCjB,WAAaA,KAE5FM,GAEA,oBAACb,EAAD,CACIyB,MAAM,OACNC,OAAO,MACPrB,IAAI,0EACJsB,QAAU,IAAMC,QAAQC,IAAK,wBAKjChB,GAEA,2BAAKH,UAAU,mBAEX,2BAAKA,UAAU,wBAAwB,wBAAsB,SAEzD,2BAAKA,UAAU,+BAA+B5B,EAAI,UAClD,+BACA,oBAACe,EAAD,CACIiC,MAAM,QACNZ,MAAQhB,EACRkB,SAAaW,IAAiBpB,EAAe,CAAET,MAAQ6B,KACvDC,KAAK,WAKb,2BAAKtB,UAAU,wBAAwB,wBAAsB,QAEzD,2BAAKA,UAAU,+BAA+B5B,EAAI,SAClD,+BACA,oBAACgB,EAAD,CACIgC,MAAM,WACNG,KAAO,EACPf,MAAQJ,EACRM,SAAac,IAAgBvB,EAAe,CAAEG,KAAOoB,SAM7D,2BAAKxB,UAAU,wBAAwB,wBAAsB,SAEzD,2BAAKA,UAAU,+BAA+B5B,EAAI,UAClD,+BACA,oBAACiB,EAAD,CACI+B,MAAQhD,EAAI,sBACZoC,MAAQD,EACRG,SAAae,IAAexB,EAAe,CAAEM,WAAYkB,KAEzDC,QAAU,CACN,CAAElB,MAAO,KAAMY,MAAO,sBAAuBO,UAAU,GACvD,CAAEnB,MAAO,IAAKY,MAAO,UACrB,CAAEZ,MAAO,IAAKY,MAAO,UACrB,CAAEZ,MAAO,IAAKY,MAAO,eAMjC,2BAAKpB,UAAU,wBAAwB,wBAAsB,OAEzD,2BAAKA,UAAU,+BAA+B5B,EAAI,QAClD,+BACA,oBAACe,EAAD,CACIiC,MAAM,QACNZ,MAAQH,EACRK,SAAakB,IAAiB3B,EAAe,CAAEI,UAAYuB,KAC3DN,KAAK,SAET,oBAACnC,EAAD,CACIiC,MAAM,OACNZ,MAAQF,EACRI,SAAamB,IAAgB5B,EAAe,CAAEK,SAAWuB,KACzDP,KAAK,aAYjCQ,KAAK,GAA4B,IAA3B,WAAEjC,EAAF,UAAcG,GAAa,EAE7B,OAAO,QApInB,CAwIG+B,OAAO5D","sources":["webpack://whodunit-starter-theme/./blocks/legacy-navigation-block/index.jsx"],"sourcesContent":["\n\nimport \"./style.scss\";\n\n\nimport attributes_block from \"./attributes.json\";\n\n\n(function (wp) {\n\n    const { __ }                                 = wp.i18n ;\n    const { registerBlockType }                  = wp.blocks;\n    const { serverSideRender: ServerSideRender } = wp ;\n    const { Fragment }                           = wp.element;\n\n    const { InnerBlocks, BlockControls, BlockAlignmentToolbar } = wp.blockEditor;\n    const { ToolbarGroup, ToolbarItem, Button, TextControl, TextareaControl, SelectControl, FocusableIframe } = wp.components;\n    \n\n    registerBlockType('maxpertici/legacy-navigation-block', {\n\n        title: 'Legacy Navigation Block',\n\n        icon: { background: '#F1F9F9', src: 'admin-site-alt2' },\n        category: 'maxpertici',\n\n        attributes: attributes_block ,\n\n        edit( { attributes, className, setAttributes, isSelected } ){\n\n            \n            const { whoRenderPreview, title, text, cta_label, cta_link, navigation } = attributes ;\n\n            return (\n                <Fragment>\n\n                    <BlockControls>\n\n                        <BlockAlignmentToolbar\n                            value={ attributes.textAlign }\n                            onChange={ ( nextAlign ) => { setAttributes( { textAlign: nextAlign } ); } }\n                        />\n\n                        <ToolbarGroup>\n                            <ToolbarItem as={ Button } onClick={ () => setAttributes( {  whoRenderPreview: ! whoRenderPreview } ) }>* SWITCH *</ToolbarItem>    \n                        </ToolbarGroup>\n\n                    </BlockControls>\n\n                    { whoRenderPreview && <ServerSideRender block=\"maxpertici/legacy-navigation-block\" attributes={ attributes } /> }\n\n                    { ! whoRenderPreview && \n\n                        <FocusableIframe\n                            width=\"1200\"\n                            height=\"600\"\n                            src=\"http://localhost:10004/wp-admin/nav-menus.php?admin-page-viewport=modal\"\n                            onFocus={ () => console.log( 'iframe is focused' ) }\n                        />\n                    }\n\n\n                    { ! whoRenderPreview && \n\n                        <div className=\"whoEditorFields\">\n\n                            <div className=\"whoEditorFields__cell\" data-ext-command-slug=\"title\">\n\n                                <div className=\"whoEditorFields__cell-title\">{__( 'Title' )}</div>\n                                <div>\n                                <TextControl\n                                    label=\"Title\"\n                                    value={ title }\n                                    onChange={ ( nextTitle ) => { setAttributes( { title : nextTitle } ); } }\n                                    type=\"text\"\n                                />\n                                </div>\n                            </div>\n\n                            <div className=\"whoEditorFields__cell\" data-ext-command-slug=\"text\">\n\n                                <div className=\"whoEditorFields__cell-title\">{__( 'Text' )}</div>\n                                <div>\n                                <TextareaControl\n                                    label=\"Textarea\"\n                                    rows={ 4 }\n                                    value={ text }\n                                    onChange={ ( nextText ) => { setAttributes( { text : nextText } ); } }\n                                />\n                                </div>\n                                \n                            </div>\n\n                            <div className=\"whoEditorFields__cell\" data-ext-command-slug=\"image\">\n\n                                <div className=\"whoEditorFields__cell-title\">{__( 'Image' )}</div>\n                                <div>\n                                <SelectControl\n                                    label={ __( 'Select some users:' ) }\n                                    value={ navigation } // e.g: value = [ 'a', 'c' ]\n                                    onChange={ ( nextNav ) => { setAttributes( { navigation: nextNav } ); } }\n                                    \n                                    options={ [\n                                        { value: null, label: 'Select a Navigation', disabled: true },\n                                        { value: 'a', label: 'Nav. A' },\n                                        { value: 'b', label: 'Nav. B' },\n                                        { value: 'c', label: 'Nav. c' },\n                                    ] }\n                                />\n                                </div>\n                            </div>\n\n                            <div className=\"whoEditorFields__cell\" data-ext-command-slug=\"cta\">\n\n                                <div className=\"whoEditorFields__cell-title\">{__( 'CTA' )}</div>\n                                <div>\n                                <TextControl\n                                    label=\"Label\"\n                                    value={ cta_label }\n                                    onChange={ ( nextLabel ) => { setAttributes( { cta_label : nextLabel } ); } }\n                                    type=\"text\"\n                                />\n                                <TextControl\n                                    label=\"Link\"\n                                    value={ cta_link }\n                                    onChange={ ( nextLink ) => { setAttributes( { cta_link : nextLink } ); } }\n                                    type=\"url\"\n                                />\n                                </div>\n                            </div>\n\n                        </div>\n                    } \n\n                </Fragment>\n            );\n        },\n\n        save( { attributes, className } ){\n\n            return null;\n        },\n\n    });\n})(window.wp);"],"names":["wp","__","i18n","registerBlockType","blocks","serverSideRender","ServerSideRender","Fragment","element","InnerBlocks","BlockControls","BlockAlignmentToolbar","blockEditor","ToolbarGroup","ToolbarItem","Button","TextControl","TextareaControl","SelectControl","FocusableIframe","components","title","icon","background","src","category","attributes","attributes_block","edit","className","setAttributes","isSelected","whoRenderPreview","text","cta_label","cta_link","navigation","value","textAlign","onChange","nextAlign","as","onClick","block","width","height","onFocus","console","log","label","nextTitle","type","rows","nextText","nextNav","options","disabled","nextLabel","nextLink","save","window"],"sourceRoot":""}